[{"C:\\Webdev\\Email\\filterapp\\client\\src\\App.js":"1","C:\\Webdev\\Email\\filterapp\\client\\src\\context\\lead\\LeadState.js":"2","C:\\Webdev\\Email\\filterapp\\client\\src\\components\\ListItem.js":"3","C:\\Webdev\\Email\\filterapp\\client\\src\\index.js":"4","C:\\Webdev\\Email\\filterapp\\client\\src\\context\\lead\\leadReducer.js":"5","C:\\Webdev\\Email\\filterapp\\client\\src\\components\\NewUpload.js":"6","C:\\Webdev\\Email\\filterapp\\client\\src\\components\\SuppressUpload.js":"7","C:\\Webdev\\Email\\filterapp\\client\\src\\components\\ListViewer.js":"8","C:\\Webdev\\Email\\filterapp\\client\\src\\context\\lead\\leadContext.js":"9","C:\\Webdev\\Email\\filterapp\\client\\src\\context\\types.js":"10"},{"size":546,"mtime":1606144410033,"results":"11","hashOfConfig":"12"},{"size":2397,"mtime":1606166742414,"results":"13","hashOfConfig":"12"},{"size":1461,"mtime":1606161485928,"results":"14","hashOfConfig":"12"},{"size":201,"mtime":1606144448516,"results":"15","hashOfConfig":"12"},{"size":987,"mtime":1606163994230,"results":"16","hashOfConfig":"12"},{"size":2290,"mtime":1606149063995,"results":"17","hashOfConfig":"12"},{"size":2296,"mtime":1606148407261,"results":"18","hashOfConfig":"12"},{"size":883,"mtime":1606164151357,"results":"19","hashOfConfig":"12"},{"size":109,"mtime":1606144725887,"results":"20","hashOfConfig":"12"},{"size":332,"mtime":1606164010940,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kbmtt9",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Webdev\\Email\\filterapp\\client\\src\\App.js",[],"C:\\Webdev\\Email\\filterapp\\client\\src\\context\\lead\\LeadState.js",["43"],"C:\\Webdev\\Email\\filterapp\\client\\src\\components\\ListItem.js",[],"C:\\Webdev\\Email\\filterapp\\client\\src\\index.js",[],"C:\\Webdev\\Email\\filterapp\\client\\src\\context\\lead\\leadReducer.js",["44","45"],"C:\\Webdev\\Email\\filterapp\\client\\src\\components\\NewUpload.js",["46","47"],"import React, { useContext } from \"react\";\r\nimport LeadContext from \"../context/lead/leadContext\";\r\nimport CSVReader from \"react-csv-reader\";\r\n\r\nconst Upload = () => {\r\n  const leadContext = useContext(LeadContext);\r\n\r\n  const { uploadDaily } = leadContext;\r\n\r\n  const papaparseOptions = {\r\n    header: true,\r\n    dynamicTyping: true,\r\n    skipEmptyLines: true,\r\n    beforeFirstChunk: function (chunk) {\r\n      var index = chunk.match(/\\r\\n|\\r|\\n/).index;\r\n      var headings = chunk.substr(0, index).split(\",\");\r\n      return headings.join() + chunk.substr(index);\r\n    },\r\n    transformHeader: (header) => toCamelCaseString(header),\r\n    transform: (data) => data.toProperCase(),\r\n  };\r\n\r\n  String.prototype.toProperCase = function () {\r\n    return this.replace(/\\w\\S*/g, function (txt) {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    });\r\n  };\r\n  function convertToString(input) {\r\n    if (input) {\r\n      if (typeof input === \"string\") {\r\n        return input;\r\n      }\r\n\r\n      return String(input);\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  // convert string to words\r\n  function toWords(input) {\r\n    input = convertToString(input);\r\n\r\n    var regex = /[A-Z\\xC0-\\xD6\\xD8-\\xDE]?[a-z\\xDF-\\xF6\\xF8-\\xFF]+|[A-Z\\xC0-\\xD6\\xD8-\\xDE]+(?![a-z\\xDF-\\xF6\\xF8-\\xFF])|\\d+/g;\r\n\r\n    return input.match(regex);\r\n  }\r\n\r\n  // convert the input array to camel case\r\n  function toCamelCase(inputArray) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0, len = inputArray.length; i < len; i++) {\r\n      let currentStr = inputArray[i];\r\n\r\n      let tempStr = currentStr.toLowerCase();\r\n\r\n      if (i != 0) {\r\n        // convert first letter to upper case (the word is in lowercase)\r\n        tempStr = tempStr.substr(0, 1).toUpperCase() + tempStr.substr(1);\r\n      }\r\n\r\n      result += tempStr;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  // this function call all other functions\r\n\r\n  function toCamelCaseString(header) {\r\n    let words = toWords(header);\r\n\r\n    return toCamelCase(words);\r\n  }\r\n  return (\r\n    <div>\r\n      <CSVReader\r\n        label='Upload Leads'\r\n        parserOptions={papaparseOptions}\r\n        onFileLoaded={(data, fileInfo) => uploadDaily(data)}\r\n        inpuId='leads'\r\n        inputStyle={{ color: \"red\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","C:\\Webdev\\Email\\filterapp\\client\\src\\components\\SuppressUpload.js",["48","49"],"C:\\Webdev\\Email\\filterapp\\client\\src\\components\\ListViewer.js",["50"],"C:\\Webdev\\Email\\filterapp\\client\\src\\context\\lead\\leadContext.js",[],"C:\\Webdev\\Email\\filterapp\\client\\src\\context\\types.js",[],{"ruleId":"51","severity":1,"message":"52","line":2,"column":16,"nodeType":"53","messageId":"54","endLine":2,"endColumn":22},{"ruleId":"55","severity":1,"message":"56","line":11,"column":1,"nodeType":"57","endLine":56,"endColumn":3},{"ruleId":"58","severity":1,"message":"59","line":12,"column":3,"nodeType":"60","messageId":"61","endLine":55,"endColumn":4},{"ruleId":"62","severity":1,"message":"63","line":23,"column":3,"nodeType":"64","messageId":"65","endLine":27,"endColumn":4},{"ruleId":"66","severity":1,"message":"67","line":57,"column":13,"nodeType":"68","messageId":"65","endLine":57,"endColumn":15},{"ruleId":"62","severity":1,"message":"63","line":23,"column":3,"nodeType":"64","messageId":"65","endLine":27,"endColumn":4},{"ruleId":"66","severity":1,"message":"67","line":57,"column":13,"nodeType":"68","messageId":"65","endLine":57,"endColumn":15},{"ruleId":"51","severity":1,"message":"69","line":1,"column":29,"nodeType":"53","messageId":"54","endLine":1,"endColumn":38},"no-unused-vars","'uuidv4' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'useEffect' is defined but never used."]